import React from 'react';
import type { Metadata } from 'next';
// import { Inter } from 'next/font/google';
import '@/app/globals.css';
// import Nav from '@/lib/components/nav/nav.component';
import { Providers } from '@/app/providers';
// import { type LangParams } from '@/lib/models/dictionaries/lang-params';
import '@/lib/styles/animations/gsap-config';
// import Footer from '@/lib/components/footer/footer.component';
import { SpeedInsights } from '@vercel/speed-insights/next';
import { Analytics } from "@vercel/analytics/react";
import { GeistSans } from 'geist/font/sans';
import { NextIntlClientProvider } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';

// const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
};

// interface LocaleLayoutProps {
//   params: LangParams | Promise<LangParams>;
//   children: React.ReactNode;
// }


const LocaleLayout = async (
  { children, params }: {
    children: React.ReactNode;
    params: Promise<{ locale: string }>;
  }) => {

  // const preferredLocale = await locale;
  // const awaitedParams = await params;
  // const { lang } = awaitedParams;

  const directLocale = (await params).locale;

  // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
  if (!routing.locales.includes(directLocale as any)) {
    notFound();
  }

  const messages = await getMessages();

  return (
    <html lang={directLocale}>
      <body className={GeistSans.className}>
        <NextIntlClientProvider messages={messages}>
          <Providers>
            {/* <Nav params={{ locale }} /> */}
            {children}
            {/* <Footer params={{ locale }} /> */}
            <SpeedInsights />
            <Analytics />
          </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
};

export default LocaleLayout;
